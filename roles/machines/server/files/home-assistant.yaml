homeassistant:
  name: Apartment
  time_zone: America/Los_Angeles
  unit_system: imperial
  elevation: 74
  latitude: 37.7808295
  longitude: -122.4133351

  customize:
    zone.home:
      beacon:
        uuid: 74278bda-b644-4520-8f0c-720eaf059935
        major: 1
        minor: 1139
    light.wall:
      icon: mdi:ceiling-light
    light.desk:
      icon: mdi:track-light
    light.bedside:
      icon: mdi:lamp
    light.fluorescents:
      icon: mdi:ceiling-light
    light.kitchen:
      icon: mdi:ceiling-light
    light.livingroom:
      icon: mdi:floor-lamp
    light.entrance:
      icon: mdi:lamp
    switch.monitors:
      icon: mdi:monitor
    switch.heater:
      icon: mdi:radiator
    climate.heater:
      icon: mdi:radiator
    fan.xiaomi_miio_device:
      icon: mdi:weather-windy
    media_player.spotify:
      entity_picture: ''

http:
  api_password: !secret api_key
  base_url: https://hass.evanpurkhiser.com

config: # Configuration component
history: # Event history component
logbook: # Event logbook
system_health:

homekit:
  filter:
    exclude_entities:
      - switch.heater
      - sensor.dark_sky_temperature
      - sensor.temperature

google_assistant:
  project_id: home-assistant-19f4f
  api_key: !secret google_assistant_api_key
  expose_by_default: true
  entity_config:
    switch.heater: { expose: false }
    group.all_fans: { expose: false }
    group.all_switches: { expose: false }
    group.all_devices: { expose: false }

zone:
  - name: Home
    icon: mdi:home
    latitude: 37.7808295
    longitude: -122.4133351
    radius: 100
    beacon:
      uuid: 74278bda-b644-4520-8f0c-720eaf059935
      major: 1
      minor: 1139

  - name: Work
    icon: mdi:office-building
    latitude: 37.7839965
    longitude: -122.397365
    radius: 200

zwave:
  usb_path: /dev/zwave
  network_key: "0x04, 0xD1, 0xD6, 0x19, 0x30, 0xFF, 0x6B, 0x71, 0x54, 0x38, 0x4C, 0x79, 0x5A, 0x31, 0x24, 0xFD"
  device_config:
    zwave.z_wave_sigma_designs_uzb_z_wave_usb_adapter:
      ignored: true
    binary_sensor.hank_electronics_ltd_hkzw_dws01_door_window_sensor_sensor:
      ignored: true
    sensor.hank_electronics_ltd_hkzw_dws01_door_window_sensor_sourcenodeid:
      ignored: true
    sensor.hank_electronics_ltd_hkzw_dws01_door_window_sensor_burglar:
      ignored: true
    sensor.hank_electronics_ltd_hkzw_dws01_door_window_sensor_alarm_type:
      ignored: true
    sensor.hank_electronics_ltd_hkzw_dws01_door_window_sensor_alarm_level:
      ignored: true

zha:
  usb_path: /dev/zigbee
  database_path: /config/zigbee.db

hue:
  bridges:
    - host: 10.0.0.31

mqtt:
  broker: 127.0.0.1
  port: 1883
  client_id: home-assistant-1
  keepalive: 60
  protocol: 3.1
  birth_message:
    topic: tele/hass1/LWT
    payload: Online
    qos: 1
    retain: false
  will_message:
    topic: tele/hass1/LWT
    payload: Offline
    qos: 1
    retain: false

light:
  - platform: mqtt
    name: kitchen
    state_topic: 'stat/light-kitchen/POWER'
    command_topic: 'cmnd/light-kitchen/POWER'
    availability_topic: 'tele/light-kitchen/LWT'
    payload_on: 'ON'
    payload_off: 'OFF'
    payload_available: 'Online'
    payload_not_available: 'Offline'
    qos: 1
    retain: false

  - platform: mqtt
    name: counter
    state_topic: 'stat/light-counter/POWER'
    command_topic: 'cmnd/light-counter/POWER'
    availability_topic: 'tele/light-counter/LWT'
    payload_on: 'ON'
    payload_off: 'OFF'
    payload_available: 'Online'
    payload_not_available: 'Offline'
    qos: 1
    retain: false

  - platform: mqtt
    name: wall
    state_topic: 'stat/light-wall/POWER'
    command_topic: 'cmnd/light-wall/POWER'
    availability_topic: 'tele/light-wall/LWT'
    payload_on: 'ON'
    payload_off: 'OFF'
    payload_available: 'Online'
    payload_not_available: 'Offline'
    qos: 1
    retain: false

fan:
  # Xaiomi Airpurifier 2S. Token obtained using the miio client. Network access
  # is restricted to the localnetwork only.
  - platform: xiaomi_miio
    name: Air Purifier
    host: 10.0.0.25
    token: a0210ed9910d5d5698743a17cdd521ff

sensor:
  - platform: template
    sensors:
      temperature:
        value_template: "{{ state_attr('fan.xiaomi_miio_device', 'temperature') }}"
        unit_of_measurement: '°C'
        device_class: temperature
      humidity:
        value_template: "{{ state_attr('fan.xiaomi_miio_device', 'humidity') }}"
        unit_of_measurement: '%'
        device_class: humidity
      pm25:
        value_template: "{{ state_attr('fan.xiaomi_miio_device', 'aqi') }}"
        unit_of_measurement: 'µg/m3'
        # Device class is not supported for pm25, however giving it the name of
        # 'pm25' will allow homekit to pickup that it is an air quality sensor.
  - platform: darksky
    api_key: !secret darksky_api_key
    forecast: [1]
    monitored_conditions: [temperature]

binary_sensor:
  - platform: template
    sensors:
      front_door:
        # The door sensor alternates between the values 23 and 22 for closed
        # and open respectively.
        value_template: "{{ is_state('sensor.hank_electronics_ltd_hkzw_dws01_door_window_sensor_access_control', '22') }}"
        device_class: door

  # This sensor handles the inference logic to determine if home assistant
  # *thinks* that I am at home. There are various routines that I follow that
  # we can use to make assumptions about weather or not I am in my apartment or
  # not. They are documented below.
  #
  # TODO: This doesn't really work...
  # - platform: bayesian
  #   name: suspected_home
  #   prior: 0.5
  #   probability_threshold: 0.5
  #   observations:
  #     # If the computer monitors are on there's a chance that I am at home.
  #     - entity_id: switch.monitors
  #       platform: state
  #       prob_given_true: 0.60
  #       to_state: on
  #     # If the computer monitors are on and have been on for over 30 minutes,
  #     # there's a very good chance that I am still at home.
  #     - platform: template
  #       prob_given_true: 0.90
  #       prob_given_false: 0.40
  #       value_template: >
  #         {{ is_state('switch.monitors', 'on') and
  #            (now() - states.switch.monitors.last_changed).seconds > 30*60 }}
  #     # If it's a weekday between 8am and 12pm and I have NOT opened my front
  #     # door yet, it's very likely that I am home getting ready for work.
  #     - platform: template
  #       prob_given_true: 0.95
  #       prob_given_false: 0.40
  #       value_template: >
  #         {{ now().weekday() < 5 and now().hour() >= 8 and now().hour() < 12 and
  #            (now() - states.binary_sensor.front_door.last_changed).seconds > 4*60*60 }}
  #     # If any lights are on, there's a good chance that I am home.
  #     - entity_id: group.all_lights
  #       platform: state
  #       prob_given_true: 0.80
  #       prob_given_false: 0.40
  #       to_state: on

switch:
  - platform: command_line
    switches:
      monitors:
        command_state:
          LANG=C ssh -o StrictHostKeyChecking=no -i /config/id_rsa evan@macbook
            'test 4 == $(ioreg -n IODisplayWrangler
              | grep -i IOPowerManagement
              | perl -pe "s/^.*DevicePowerState\"=([0-9]+).*$/\1/")'
        command_on:
          LANG=C ssh -o StrictHostKeyChecking=no -i /config/id_rsa evan@macbook
            caffeinate -u
        command_off:
          LANG=C ssh -o StrictHostKeyChecking=no -i /config/id_rsa evan@macbook
            pmset displaysleepnow

  - platform: mqtt
    name: heater
    state_topic: 'stat/switch-heater/POWER'
    command_topic: 'cmnd/switch-heater/POWER'
    availability_topic: 'tele/switch-heater/LWT'
    payload_on: 'ON'
    payload_off: 'OFF'
    payload_available: 'Online'
    payload_not_available: 'Offline'
    qos: 1
    retain: false

climate:
  - platform: generic_thermostat
    name: Heater
    heater: switch.heater
    target_sensor: sensor.temperature
    precision: 0.1

media_player:
  - platform: spotify
    client_id: e54d259d80434a8ead4b1bd82a9e5a0b
    client_secret: !secret spotify_api_key
    aliases:
      abc123def456: 'Living Room'
      9183abas000: 'Bed Room'

automation:
  # Check the status of sonoff devices during boot. They do not report to us on
  # any periodic heartbeat.
  - alias: Sonoff power state on HA start-up
    hide_entity: true
    initial_state: true
    trigger:
      platform: homeassistant
      event: start
    action:
      - service: mqtt.publish
        data:
          topic: 'sonoffs/cmnd/state'
          payload: ''
      - service: mqtt.publish
        data:
          topic: 'cmnd/sonoffs/POWER'
